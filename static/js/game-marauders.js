let backgroundColor,starShip,score,bullets,alienBitSize,alienHorde,numberOfStarships,level,alienHordeStartX,alienHordeStartY,isPaused;function setup(){const e=document.querySelector("canvas");isPaused=!1,createCanvas(400,400,WEBGL,e),colorMode(HSB,360,100,100),backgroundColor=5,frameRate(12),alienBitSize=3,starShip=new Starship,alienHordeStartX=100,alienHordeStartY=50,alienHorde=new AlienHorde(alienHordeStartX,alienHordeStartY),numberOfStarships=3,score=0,bullets=[],level=1}function draw(){background(backgroundColor),starShip.moveSelf(),starShip.showSelf(),starShip.checkCollisions(alienHorde);for(const e of bullets)e.moveSelf(),e.showSelf();bullets=bullets.filter(e=>e.isActive),alienHorde.move(),alienHorde.show(),alienHorde.checkCollisions(),alienHorde.removeDead(),displayScore()}function displayScore(){fill(95),text(`Score: ${score}`,20,20),text(`Ships remaining: ${numberOfStarships}`,20,35),text(`Level: ${level}`,20,50)}function keyPressed(){keyCode===RIGHT_ARROW?starShip.direction="E":keyCode===LEFT_ARROW?starShip.direction="W":keyCode===71?restartGame():keyCode===32?bullets.push(new Bullet(starShip.x+15,starShip.y)):keyCode===80&&(isPaused?(isPaused=!1,loop()):(isPaused=!0,noLoop()))}function restartGame(){score=0,starShip=new Starship,alienHorde=new AlienHorde(100,50),bullets=[],loop()}function gameOver(){numberOfStarships==0?(background(backgroundColor),starShip.showSelf(),displayScore(),stroke(0),text("GAME OVER",width/2-50,height/2-20),noLoop()):(alienHordeStartY+alienHorde.height<starShip.y&&(alienHordeStartY+=20),alienHorde=new AlienHorde(alienHordeStartX,alienHordeStartY),bullets=[],level++)}class Starship{constructor(){this.size=20,this.x=width/2,this.y=height-35,this.direction="",this.speed=12,this.width=this.size*3,this.height=this.size*3}moveSelf(){this.direction==="E"&&this.x+40<=width?this.x+=this.speed:this.direction==="W"&&this.x-10>=0&&(this.x-=this.speed)}showSelf(){fill(color(200,90,90)),noStroke(),rect(this.x,this.y+10,this.size/2,this.size),rect(this.x+10,this.y,this.size/2,this.size),rect(this.x+20,this.y+10,this.size/2,this.size)}checkCollisions(e){for(const t of e.aliens)collideRectRect(t.x,t.y,t.width,t.height,this.x,this.y,this.width,this.height)&&(console.log("starship ouchie!"),numberOfStarships--,numberOfStarships==0&&gameOver())}}class Bullet{constructor(e,t){this.x=e,this.y=t,this.length=10,this.width=2,this.speed=20,this.isActive=!0}moveSelf(){this.y>=0-this.length?this.y-=20:this.isActive=!1}showSelf(){fill(95),noStroke(),rect(this.x,this.y,this.width,this.length)}}class Alien{constructor(e,t){this.x=e,this.y=t,this.bitSize=alienBitSize,this.width=10*this.bitSize,this.height=7*this.bitSize,this.isAlive=!0,this.isBleep=!0}showSelf(){fill(color(120,90,90)),noStroke(),this.isBleep?(rect(this.x,this.y+this.bitSize*4,this.bitSize,this.bitSize*3),rect(this.x+this.bitSize*10,this.y+this.bitSize*4,this.bitSize,this.bitSize*3),rect(this.x+this.bitSize*3,this.y+this.bitSize*7,this.bitSize*2,this.bitSize),rect(this.x+this.bitSize*6,this.y+this.bitSize*7,this.bitSize*2,this.bitSize),this.isBleep=!1):(rect(this.x,this.y+2*this.bitSize,this.bitSize,this.bitSize*3),rect(this.x+this.bitSize*10,this.y+this.bitSize*2,this.bitSize,this.bitSize*3),rect(this.x+this.bitSize*1,this.y+this.bitSize*7,this.bitSize,this.bitSize),rect(this.x+this.bitSize*9,this.y+this.bitSize*7,this.bitSize,this.bitSize),this.isBleep=!0),rect(this.x+this.bitSize,this.y+3*this.bitSize,this.bitSize,this.bitSize*2),rect(this.x+this.bitSize*2,this.y,this.bitSize,this.bitSize),rect(this.x+this.bitSize*2,this.y+2*this.bitSize,this.bitSize,this.bitSize*5),rect(this.x+this.bitSize*3,this.y+1*this.bitSize,this.bitSize,this.bitSize*2),rect(this.x+this.bitSize*3,this.y+4*this.bitSize,this.bitSize,this.bitSize*2),rect(this.x+this.bitSize*4,this.y+this.bitSize*2,this.bitSize*3,this.bitSize*4),rect(this.x+this.bitSize*7,this.y+this.bitSize*1,this.bitSize,this.bitSize*2),rect(this.x+this.bitSize*7,this.y+this.bitSize*4,this.bitSize,this.bitSize*2),rect(this.x+this.bitSize*8,this.y+this.bitSize*2,this.bitSize,this.bitSize*5),rect(this.x+this.bitSize*8,this.y,this.bitSize,this.bitSize),rect(this.x+this.bitSize*9,this.y+this.bitSize*3,this.bitSize,this.bitSize*2)}moveSelf(e,t){this.x-=e,this.y+=t}checkCollisions(){for(let e of bullets)collideRectRect(this.x,this.y,this.width,this.height,e.x,e.y,e.width,e.length)&&(console.log("hit"),this.isAlive=!1,e.isActive=!1,e.y=0,score+=1)}}class AlienHorde{constructor(e,t){this.aliens=[],this.x=e,this.y=t,this.width=4*10*alienBitSize+20,this.height=0,this.deltaX=10,this.deltaY=0,this.createAliens()}createAliens(){for(let e=0;e<3;e++){for(let t=0;t<5;t++){let n=this.x+t*13*alienBitSize,s=this.y+e*10*alienBitSize;this.aliens.push(new Alien(n,s))}this.height+=alienBitSize*10}}removeDead(){this.aliens=this.aliens.filter(e=>e.isAlive),this.aliens.length==0&&(this.show(),gameOver())}move(){this.x-=this.deltaX,this.y+=this.deltaY,this.x<=20?(this.deltaX=-10,this.deltaY=10):this.x+this.width>=width-70?(this.deltaX=10,this.deltaY=10):this.deltaY=0;for(const e of this.aliens)e.moveSelf(this.deltaX,this.deltaY)}show(){for(const e of this.aliens)e.showSelf()}checkCollisions(){for(const e of this.aliens)e.checkCollisions()}}